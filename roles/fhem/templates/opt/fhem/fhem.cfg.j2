# ========================
# GLOBAL ATTRIBUTES
# ========================
attr global autoload_undefined_devices 0
attr global logfile ./log/fhem-%Y-%m.log
attr global modpath .
attr global motd none
attr global sendStatistics onUpdate
attr global statefile ./log/fhem.save
attr global uniqueID ./FHEM/FhemUtils/uniqueID
attr global updateInBackground 1
attr global verbose 3
attr global userattr cmdIcon devStateIcon devStateStyle fm_type icon room_map sortby structexclude webCmd widgetOverride genericDeviceType:ignore,switch,outlet,light,blind,speaker,thermostat,lock,window,contact

# ========================
# APIs and GUIs
# ========================

define telnetPort telnet 7072 global
attr telnetPort globalpassword {{ _fhem.security.telnet.password }}
attr telnetPort password {{ _fhem.security.telnet.password }}
attr telnetPort allowfrom 192\.168\.192\.[0-9]{3}

define WEB FHEMWEB 8083 global
attr WEB JavaScripts codemirror/fhem_codemirror.js
attr WEB basicAuth {{ (_fhem.security.web.user ~ ":" ~ _fhem.security.web.password) | b64encode }}
attr WEB codemirrorParam { "theme":"blackboard", "lineNumbers":true }
attr WEB stylesheetPrefix dark
attr WEB sortRooms Flur Arbeitszimmer Wohnzimmer
attr WEB roomIcons Flur:scene_summerhouse Wohnzimmer:scene_livingroom Arbeitszimmer:scene_workshop
attr WEB group Licht

# Fake FileLog entry, to access the fhem log from FHEMWEB
define autocreate autocreate
attr autocreate filelog ./log/%NAME-%Y-%m.log

define eventTypes eventTypes ./log/eventTypes.txt

# ========================
# IO DEVICES
# ========================

# Disable this to avoid looking for new USB devices on startup
# define initialUsbCheck notify global:INITIALIZED usb create

define CUL_868 CUL {{ _fhem.io.devices.cul.868.device_path }}@9600 1034
attr CUL_868 hmId {{ _fhem.homematic.hmId }}
attr CUL_868 icon cul_868
attr CUL_868 rfmode HomeMatic

define CUL_433 CUL {{ _fhem.io.devices.cul.433.device_path }}@9600 1134
attr CUL_433 icon cul_cul

# ========================
# DEVICE DEFINITIONS
# ========================

# ========================
# InterTechno Switches
# ========================
#
# genericDeviceType setzt den Gerätetypen für Homebridge / HomeKit -- cf. http://forum.fhem.de/index.php/topic,32652.msg377941.html#msg377941
#
{% for s in _fhem.intertechno.devices %}
# ------------------------
define {{ s.name }} IT {{ s.code }}  FF F0
attr {{ s.name }} userattr room_map structexclude
attr {{ s.name }} IODev CUL_433
{% if s.alias is defined %}
attr {{ s.name }} alias {{ s.alias }}
{% endif %}
attr {{ s.name }} genericDeviceType {{ s.gen_type }}
attr {{ s.name }} group {{ s.group }}
attr {{ s.name }} icon {{ s.icon|default("light_light") }}
attr {{ s.name }} model itswitch
attr {{ s.name }} room {{ s.rooms|join(',') }},IT
# ------------------------

{% endfor %}


# ========================
# HomeMatic
# ========================
# cf. http://www.fhemwiki.de/wiki/HM-ES-PMSw1-Pl_Funk-Schaltaktor_1-fach_mit_Leistungsmessung#Plots.2FGrafiken for HM-ES-PMSw1-Pl
#
define ActionDetector CUL_HM 000000
attr ActionDetector event-on-change-reading .*
attr ActionDetector model ActionDetector

{% for d in _fhem.homematic.devices %}
# ------------------------
define {{ d.name }} CUL_HM {{ d.address }}
attr {{ d.name }} serialNr {{ d.serialNr }}
attr {{ d.name }} subType {{ d.subType }}
attr {{ d.name }} IODev {{ d.IODev }}
attr {{ d.name }} actCycle {{ d.actCycle }}
attr {{ d.name }} actStatus {{ d.actStatus }}
attr {{ d.name }} autoReadReg {{ d.autoReadReg }}
attr {{ d.name }} expert {{ d.expert }}
attr {{ d.name }} firmware {{ d.firmware }}
attr {{ d.name }} model {{ d.model }}
attr {{ d.name }} room hidden
attr {{ d.name }} webCmd {{ d.webCmd }}
{% if d.alias is defined %}
attr {{ d.name }} alias {{ d.alias }}
{% endif %}

define FileLog_{{ d.address }} FileLog ./log/{{ d.address }}-%Y-%m.log {{ d.name }}
attr FileLog_{{ d.address }} logtype text
attr FileLog_{{ d.address }} room hidden

{% for c in d.channels %}
define {{ d.name }}_{{ c.name }} CUL_HM {{ d.address }}{{ "%02d"|format(c.channel) }}
attr {{ d.name }}_{{ c.name }} model {{ d.model }}
{% if c.subType is defined %}
attr {{ d.name }}_{{ c.name }} subType {{ c.subType }}
{% endif %}
{% if c.alias is defined %}
attr {{ d.name }}_{{ c.name }} alias {{ c.alias }}
{% endif %}
{% if c.group is defined %}
attr {{ d.name }}_{{ c.name }} group {{ c.group }}
{% endif %}
{% if c.gen_type is defined %}
attr {{ d.name }}_{{ c.name }} genericDeviceType {{ c.gen_type }}
{% endif %}
{% if c.icon is defined %}
attr {{ d.name }}_{{ c.name }} icon {{ c.icon }}
{% endif %}
attr {{ d.name }}_{{ c.name }} peerIDs 00000000,
attr {{ d.name }}_{{ c.name }} room {{ c.rooms|join(',') }},HomeMatic
{% endfor %}
# ------------------------

{% endfor %}


{{ _fhem.extra }}

